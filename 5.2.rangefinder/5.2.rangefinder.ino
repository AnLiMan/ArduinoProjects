#include <Servo.h> //Библиотека управления сервоприводами 
Servo myServo;
#define SERVO 9 // Сервопривод

#define IR A0 // ИК-датчик

#define LED1 3 // Контакт светодиода 1
#define LED2 5 // Контакт светодиода 2
#define LED3 6 // Контакт светодиода 3
#define LED4 11 // Контакт светодиода 4

int dist1 = 0; // Переменная для хранения расстояния первого сектора
int dist2 = 0; // Переменная для хранения расстояния второго сектора
int dist3 = 0; // Переменная для хранения расстояния третьего сектора
int dist4 = 0; // Переменная для хранения расстояния четвертого сектора

void setup() {
  myServo.attach(SERVO); //Подключаем объект сервопривода
  pinMode(LED1, OUTPUT);
  pinMode(LED2, OUTPUT);
  pinMode(LED3, OUTPUT);
  pinMode(LED4, OUTPUT);
}

void loop() {
  dist1 = readDistance(15); // Измеряем расстояние в положении 15 градусов
  analogWrite(LED1, dist1); // Выставляем ярокость светодиода в соответсвии с измеренными данными
  delay(300);

  dist2 = readDistance(65); // Измеряем расстояние в положении 65 градусов
  analogWrite(LED2, dist2); // Выставляем ярокость светодиода в соответсвии с измеренными данными
  delay(300);

  dist3 = readDistance(115); // Измеряем расстояние в положении 15 градусов
  analogWrite(LED3, dist3); // Выставляем ярокость светодиода в соответсвии с измеренными данными
  delay(300);

  dist4 = readDistance(165); // Измеряем расстояние в положении 15 градусов
  analogWrite(LED4, dist4); // Выставляем ярокость светодиода в соответсвии с измеренными данными
  delay(300);
}

int readDistance (int pos) {
  myServo.write(pos); // Перемещаемся в значение, которое отправили ранее
  delay(600);
  int dist = analogRead(IR); // Считываем значение с ИК-датчика
  dist = map(dist, 50, 500, 0, 255); // Отмасштабируем входной сигнал
  dist = constrain(dist, 0, 255);// Ограничим диапозон для большей безопасности
  return dist; //Вернём значение расстояния
}
